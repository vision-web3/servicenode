networks:
  vision-service-node:
  vision-ethereum:
    name: vision-ethereum-${STACK_IDENTIFIER}-${ETHEREUM_NETWORK-1}
    external: true

services:
  app:
    networks:
      vision-service-node:
      vision-ethereum:
    entrypoint: sh -c 'set -a; . /etc/vision/eth-data/ETHEREUM.env && . /etc/vision/bnb-data/BNB_CHAIN.env; set +a; /usr/bin/vision-service-node-dev-entrypoint.sh'
    build:
      context: .
      dockerfile: Dockerfile
      target: servicenode-dev
      x-bake:
        tags:
          - ${DOCKER_REGISTRY-visionweb3foundation}/service-node-app:${DOCKER_TAG-local}
          - ${DOCKER_REGISTRY-visionweb3foundation}/service-node-app:${EXTRA_TAG-local}
    env_file:
      - service-node-config.dev.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - type: volume
        source: bnb-data
        target: /etc/vision/bnb-data
        read_only: true
      - type: volume
        source: eth-data
        target: /etc/vision/eth-data
        read_only: true
      - type: bind
        source: ./signer_key.pem
        target: /etc/vision/service-node-signer.pem
        read_only: true
      - type: bind
        source: ./service-node-config.docker.env
        target: /etc/vision/service-node-config.env
        read_only: true
    develop:
      watch:
        - action: sync+restart
          path: service-node-config.docker.env
          target: /root/service-node-config.docker.env
        - action: sync+restart
          path: ./vision
          target: ./vision

  worker:
    networks:
      vision-service-node:
      vision-ethereum:
    entrypoint: sh -c 'set -a; . /etc/vision/eth-data/ETHEREUM.env && . /etc/vision/bnb-data/BNB_CHAIN.env; set +a; /usr/bin/vision-service-node-worker.sh'
    build:
      context: .
      dockerfile: Dockerfile
      target: servicenode-worker-dev
      x-bake:
        tags:
          - ${DOCKER_REGISTRY-visionweb3foundation}/service-node-app:${DOCKER_TAG-local}
          - ${DOCKER_REGISTRY-visionweb3foundation}/service-node-app:${EXTRA_TAG-local}
    env_file:
      - service-node-config.dev.env
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep 'celery -A vision.servicenode worker' | grep -v grep > /dev/null || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s
    ports:
      - 555${INSTANCE-0}:5555
    volumes:
      - type: volume
        source: bnb-data
        target: /etc/vision/bnb-data
        read_only: true
      - type: volume
        source: eth-data
        target: /etc/vision/eth-data
        read_only: true
      - type: bind
        source: ./signer_key.pem
        target: /etc/vision/service-node-signer.pem
        read_only: true
      - type: bind
        source: ./service-node-config.docker.env
        target: /etc/vision/service-node-config.env
        read_only: true
    develop:
      watch:
        - action: sync+restart
          path: service-node-config.docker.env
          target: /root/service-node-config.docker.env
        - action: sync+restart
          path: ./vision
          target: ./vision

volumes:
  bnb-data:
    # Requires the same amount of instances as the servicenode
    name: bnb-data-${STACK_IDENTIFIER}-${ETHEREUM_NETWORK-1}
    external: true
  eth-data:
    name: eth-data-${STACK_IDENTIFIER}-${ETHEREUM_NETWORK-1}
    external: true
